<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nemtool.explorer.mapper.AccountsMapper">
  <resultMap id="BaseResultMap" type="com.nemtool.explorer.pojo.Accounts">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="balance" jdbcType="BIGINT" property="balance" />
    <result column="blocks" jdbcType="BIGINT" property="blocks" />
    <result column="fees" jdbcType="BIGINT" property="fees" />
    <result column="lastBlock" jdbcType="BIGINT" property="lastblock" />
    <result column="publicKey" jdbcType="VARCHAR" property="publickey" />
    <result column="timeStamp" jdbcType="BIGINT" property="timeStamp" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.nemtool.explorer.pojo.AccountsWithBLOBs">
    <result column="label" jdbcType="LONGVARCHAR" property="label" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, address, balance, blocks, fees, lastBlock, publicKey, timeStamp
  </sql>
  <sql id="Blob_Column_List">
    label, remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.nemtool.explorer.pojo.AccountsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from accounts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.nemtool.explorer.pojo.AccountsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from accounts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from accounts
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from accounts
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nemtool.explorer.pojo.AccountsExample">
    delete from accounts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nemtool.explorer.pojo.Accounts">
    insert into accounts (id, address, balance, 
      blocks, fees, lastBlock, 
      publicKey, timeStamp, label, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{balance,jdbcType=BIGINT}, 
      #{blocks,jdbcType=BIGINT}, #{fees,jdbcType=BIGINT}, #{lastblock,jdbcType=BIGINT}, 
      #{publickey,jdbcType=VARCHAR}, #{timeStamp,jdbcType=BIGINT}, #{label,jdbcType=LONGVARCHAR}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nemtool.explorer.pojo.Accounts">
    insert into accounts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="blocks != null">
        blocks,
      </if>
      <if test="fees != null">
        fees,
      </if>
      <if test="lastblock != null">
        lastBlock,
      </if>
      <if test="publickey != null">
        publicKey,
      </if>
      <if test="timeStamp != null">
        timeStamp,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=BIGINT},
      </if>
      <if test="blocks != null">
        #{blocks,jdbcType=BIGINT},
      </if>
      <if test="fees != null">
        #{fees,jdbcType=BIGINT},
      </if>
      <if test="lastblock != null">
        #{lastblock,jdbcType=BIGINT},
      </if>
      <if test="publickey != null">
        #{publickey,jdbcType=VARCHAR},
      </if>
      <if test="timeStamp != null">
        #{timeStamp,jdbcType=BIGINT},
      </if>
      <if test="label != null">
        #{label,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nemtool.explorer.pojo.AccountsExample" resultType="java.lang.Integer">
    select count(*) from accounts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update accounts
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=BIGINT},
      </if>
      <if test="record.blocks != null">
        blocks = #{record.blocks,jdbcType=BIGINT},
      </if>
      <if test="record.fees != null">
        fees = #{record.fees,jdbcType=BIGINT},
      </if>
      <if test="record.lastblock != null">
        lastBlock = #{record.lastblock,jdbcType=BIGINT},
      </if>
      <if test="record.publickey != null">
        publicKey = #{record.publickey,jdbcType=VARCHAR},
      </if>
      <if test="record.timeStamp != null">
        timeStamp = #{record.timeStamp,jdbcType=BIGINT},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update accounts
    set id = #{record.id,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=BIGINT},
      blocks = #{record.blocks,jdbcType=BIGINT},
      fees = #{record.fees,jdbcType=BIGINT},
      lastBlock = #{record.lastblock,jdbcType=BIGINT},
      publicKey = #{record.publickey,jdbcType=VARCHAR},
      timeStamp = #{record.timeStamp,jdbcType=BIGINT},
      label = #{record.label,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update accounts
    set id = #{record.id,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=BIGINT},
      blocks = #{record.blocks,jdbcType=BIGINT},
      fees = #{record.fees,jdbcType=BIGINT},
      lastBlock = #{record.lastblock,jdbcType=BIGINT},
      publicKey = #{record.publickey,jdbcType=VARCHAR},
      timeStamp = #{record.timeStamp,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nemtool.explorer.pojo.AccountsWithBLOBs">
    update accounts
    <set>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=BIGINT},
      </if>
      <if test="blocks != null">
        blocks = #{blocks,jdbcType=BIGINT},
      </if>
      <if test="fees != null">
        fees = #{fees,jdbcType=BIGINT},
      </if>
      <if test="lastblock != null">
        lastBlock = #{lastblock,jdbcType=BIGINT},
      </if>
      <if test="publickey != null">
        publicKey = #{publickey,jdbcType=VARCHAR},
      </if>
      <if test="timeStamp != null">
        timeStamp = #{timeStamp,jdbcType=BIGINT},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.nemtool.explorer.pojo.AccountsWithBLOBs">
    update accounts
    set address = #{address,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=BIGINT},
      blocks = #{blocks,jdbcType=BIGINT},
      fees = #{fees,jdbcType=BIGINT},
      lastBlock = #{lastblock,jdbcType=BIGINT},
      publicKey = #{publickey,jdbcType=VARCHAR},
      timeStamp = #{timeStamp,jdbcType=BIGINT},
      label = #{label,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nemtool.explorer.pojo.Accounts">
    update accounts
    set address = #{address,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=BIGINT},
      blocks = #{blocks,jdbcType=BIGINT},
      fees = #{fees,jdbcType=BIGINT},
      lastBlock = #{lastblock,jdbcType=BIGINT},
      publicKey = #{publickey,jdbcType=VARCHAR},
      timeStamp = #{timeStamp,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateAccountsByAddress" parameterType="com.nemtool.explorer.pojo.Accounts">
    update accounts
    <set>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=BIGINT},
      </if>
      <if test="blocks != null">
        blocks = #{blocks,jdbcType=BIGINT},
      </if>
      <if test="fees != null">
        fees = #{fees,jdbcType=BIGINT},
      </if>
      <if test="lastblock != null">
        lastBlock = #{lastblock,jdbcType=BIGINT},
      </if>
      <if test="publickey != null">
        publicKey = #{publickey,jdbcType=VARCHAR},
      </if>
      <if test="timeStamp != null">
        timeStamp = #{timeStamp,jdbcType=BIGINT},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where address = #{address,jdbcType=VARCHAR}
  </update>
  <insert id="insertList" parameterType="java.util.List" >
    INSERT INTO accounts (address, balance, blocks, fees, lastBlock, publicKey, timeStamp, label, remark)
        VALUES
        <foreach collection="accountsList"  separator="," item="item">
            (#{item.address,jdbcType=VARCHAR}, 
            #{item.balance,jdbcType=BIGINT}, 
      		#{item.blocks,jdbcType=BIGINT}, 
      		#{item.fees,jdbcType=BIGINT}, 
      		#{item.lastblock,jdbcType=BIGINT}, 
      		#{item.publickey,jdbcType=VARCHAR}, 
      		#{item.timeStamp,jdbcType=BIGINT}, 
      		#{item.label,jdbcType=LONGVARCHAR}, 
      		#{item.remark,jdbcType=LONGVARCHAR})
        </foreach>
  </insert>
  <select id="selectAllAddress" resultType="java.lang.String">
  	select address from accounts
  </select>
  <select id="selectAllPublickey" resultType="java.lang.String">
  	select distinct publicKey from accounts
  </select>
  <select id="selectPage"  resultMap="BaseResultMap">
  select 
  <include refid="Base_Column_List" />
  ,
  <include refid="Blob_Column_List" />
  from accounts
</select>
</mapper>